{
  "name": "patria-backend",
  "version": "0.0.1",
  "description": "",
  "author": "Rensga Tech",
  "private": true,
  "license": "UNLICENSED",
  "engines": {
    "node": "20",
    "npm": "10"
  },
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "db:create": "ts-node ./node_modules/typeorm-extension/bin/cli.cjs db:create --preserveFilePaths -d src/shared/typeorm/datasource.ts --synchronize no",
    "db:drop": "ts-node ./node_modules/typeorm-extension/bin/cli.cjs db:drop -d src/shared/typeorm/typeorm.ts",
    "db:fixtures": "node -r tsconfig-paths/register -r ts-node/register src/database/fixtures/main.ts",
    "db:fixtures-test": "NODE_ENV=test node -r tsconfig-paths/register -r ts-node/register src/database/fixtures/main.ts",
    "db:fixtures-ci": "NODE_ENV=ci node -r tsconfig-paths/register -r ts-node/register src/database/fixtures/main.ts",
    "db-init": "npm-run-all db-create migration db:fixtures db:fixtures-test",
    "db-create": "npm run db-create-dev && npm run db-create-test",
    "db-create-dev": "NODE_ENV=development ts-node ./node_modules/typeorm-extension/bin/cli.cjs db:create --preserveFilePaths -d src/shared/typeorm/datasource.ts --synchronize no",
    "db-create-test": "NODE_ENV=test ts-node ./node_modules/typeorm-extension/bin/cli.cjs db:create --preserveFilePaths -d src/shared/typeorm/datasource.ts --synchronize no",
    "db-create-ci": "NODE_ENV=ci ts-node ./node_modules/typeorm-extension/bin/cli.cjs db:create --preserveFilePaths -d src/shared/typeorm/datasource.ts --synchronize no",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "migration:create": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:create src/database/migrations/${npm_config_name}",
    "migration:generate": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:generate --dataSource src/shared/typeorm/datasource.ts src/database/migrations/${npm_config_name}",
    "migration:revert": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:revert --dataSource src/shared/typeorm/datasource.ts",
    "migration": "npm run migration:dev && npm run migration:test",
    "migration:dev": "NODE_ENV=development ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run --dataSource src/shared/typeorm/datasource.ts",
    "migration:test": "NODE_ENV=test ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run --dataSource src/shared/typeorm/datasource.ts",
    "migration:ci": "NODE_ENV=ci ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run --dataSource src/shared/typeorm/datasource.ts",
    "localstack:setup": "./config/localstack/setup.sh",
    "start:dependencies": "npm-run-all db-init localstack:setup",
    "start": "nest start",
    "start:debug": "nest start --debug --watch",
    "start:dev": "nest start --watch",
    "start:prod": "node dist/main",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "NODE_ENV=test jest --config jest.unit.config.ts",
    "test:integration": "NODE_ENV=test jest --config jest.integration.config.ts",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:watch": "jest --watch",
    "test-ci:unit": "NODE_ENV=ci jest --config jest.unit.config.ts",
    "test-ci:integration": "NODE_ENV=ci jest --config jest.integration.config.ts",
    "test-ci:coverage": "NODE_ENV=ci jest --coverage --testLocationInResults --outputFile=report.json --config jest.unit.config.ts",
    "test:coverage": "NODE_ENV=test jest --coverage --testLocationInResults --outputFile=report.json --config jest.unit.config.ts"
  },
  "dependencies": {
    "@aws-sdk/client-cognito-identity-provider": "^3.721.0",
    "@aws-sdk/client-s3": "^3.665.0",
    "@nestjs/common": "^10.3.1",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.3.1",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "^2.0.4",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.3.1",
    "@nestjs/swagger": "^7.3.0",
    "@nestjs/terminus": "^10.2.1",
    "@nestjs/typeorm": "^10.0.2",
    "axios": "^1.7.9",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "helmet": "^7.1.0",
    "jsonwebtoken": "^9.0.2",
    "jwks-rsa": "^3.1.0",
    "nest-winston": "^1.9.4",
    "openid-client": "^6.1.7",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.11.3",
    "reflect-metadata": "^0.1.12",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.20",
    "ulid": "^2.3.0",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@faker-js/faker": "^8.4.1",
    "@nestjs/cli": "^10.3.0",
    "@nestjs/schematics": "^10.1.0",
    "@nestjs/testing": "^10.3.1",
    "@types/express": "^4.17.21",
    "@types/jest": "29.5.11",
    "@types/node": "^20.16.13",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^6.20.0",
    "@typescript-eslint/parser": "^6.20.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "husky": "^9.0.7",
    "jest": "29.7.0",
    "lint-staged": "^15.2.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.2.4",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.4",
    "ts-jest": "29.1.2",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "4.2.0",
    "typeorm-extension": "^3.6.2",
    "typescript": "^5.7.2"
  },
  "jest": {
    "testTimeout": 10000,
    "verbose": false,
    "maxWorkers": 1,
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.test\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "moduleNameMapper": {
      "^root(.*)$": "<rootDir>/src$1",
      "^shared(.*)$": "<rootDir>/shared$1",
      "^database(.*)$": "<rootDir>/database$1",
      "^enumerates(.*)$": "<rootDir>/app/enum$1",
      "^auth(.*)$": "<rootDir>/app/auth$1",
      "^commons(.*)$": "<rootDir>/app/contexts/commons$1",
      "^user(.*)$": "<rootDir>/app/contexts/user$1",
      "^person(.*)$": "<rootDir>/app/contexts/person$1",
      "^company(.*)$": "<rootDir>/app/contexts/company$1",
      "^event-type(.*)$": "<rootDir>/app/contexts/event-type$1",
      "^plan(.*)$": "<rootDir>/app/contexts/plan$1",
      "^occupation(.*)$": "<rootDir>/app/contexts/occupation$1",
      "^activity(.*)$": "<rootDir>/app/contexts/activity$1",
      "^contract(.*)$": "<rootDir>/app/contexts/contract$1",
      "^customer(.*)$": "<rootDir>/app/contexts/customer$1"
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
